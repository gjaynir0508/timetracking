{"version":3,"sources":["components/Block.jsx","components/Blocks.jsx","components/Person.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Block","props","useState","box","svg","hover","setHover","customStyle","backgroundColor","task","color","backgroundImage","img","style","className","onMouseOver","prev","onMouseOut","title","width","height","cx","cy","r","strokeWidth","timeframes","time","current","previous","Blocks","blocks","map","item","index","Person","handleClick","event","id","target","setTime","src","alt","nameOfPerson","onClick","App","Data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7accc77b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Block(props) {\r\n  const [hover, setHover] = useState({\r\n    box: false,\r\n    svg: false\r\n  });\r\n\r\n  const customStyle = {\r\n    backgroundColor: props.task.color,\r\n    backgroundImage:\r\n      \"url(./images/\" +\r\n      props.task.img +\r\n      \")\"\r\n  };\r\n\r\n  return (\r\n    <div style={customStyle} className=\"parent-box\">\r\n      <div\r\n        onMouseOver={() => {\r\n          setHover((prev) => {\r\n            return { ...prev, box: true };\r\n          });\r\n        }}\r\n        onMouseOut={() => {\r\n          setHover((prev) => {\r\n            return { ...prev, box: false };\r\n          });\r\n        }}\r\n        className=\"child-box\"\r\n        style={\r\n          hover.box && hover.svg\r\n            ? {}\r\n            : hover.box\r\n            ? { backgroundColor: \"#34397b\" }\r\n            : {}\r\n        }\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"top\">\r\n            <h3>{props.task.title}</h3>\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              onMouseOver={() => {\r\n                setHover((prev) => {\r\n                  return { ...prev, svg: true };\r\n                });\r\n              }}\r\n              onMouseOut={() => {\r\n                setHover((prev) => {\r\n                  return { ...prev, svg: false };\r\n                });\r\n              }}\r\n            >\r\n              <circle cx=\"4\" cy=\"12\" r=\"2.5\" strokeWidth=\"0\" />\r\n              <circle cx=\"12\" cy=\"12\" r=\"2.5\" strokeWidth=\"0\" />\r\n              <circle cx=\"20\" cy=\"12\" r=\"2.5\" strokeWidth=\"0\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <h1>{props.task.timeframes[props.time].current} hrs</h1>\r\n            <p>\r\n              Last{\" \"}\r\n              {props.time === \"daily\"\r\n                ? \"Day\"\r\n                : props.time === \"weekly\"\r\n                ? \"Week\"\r\n                : \"Month\"}{\" \"}\r\n              - {props.task.timeframes[props.time].previous}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Block;\r\n","import React from \"react\";\r\nimport Block from \"./Block\";\r\n\r\nfunction Blocks(props) {\r\n  return (\r\n    <div className=\"table\">\r\n      {props.blocks.map((item, index) => {\r\n        return <Block key={index} task={item} time={props.time} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blocks;\r\n","import React from \"react\";\r\n\r\nfunction Person(props) {\r\n  function handleClick(event) {\r\n    const { id } = event.target;\r\n    props.setTime(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"parent-person\">\r\n      <div className=\"child-person\">\r\n        <div className=\"container-person\">\r\n          <img src={props.img} alt=\"Jeremy\" />\r\n          <div className=\"title\">\r\n            <p>Report For</p>\r\n            <h1>{props.nameOfPerson}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"selectors\">\r\n        <button\r\n          className={props.time === \"daily\" ? \"selector active\" : \"selector\"}\r\n          id=\"daily\"\r\n          onClick={handleClick}\r\n        >\r\n          Daily\r\n        </button>\r\n        <button\r\n          className={props.time === \"weekly\" ? \"selector active\" : \"selector\"}\r\n          id=\"weekly\"\r\n          onClick={handleClick}\r\n        >\r\n          Weekly\r\n        </button>\r\n        <button\r\n          className={props.time === \"monthly\" ? \"selector active\" : \"selector\"}\r\n          id=\"monthly\"\r\n          onClick={handleClick}\r\n        >\r\n          Monthly\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Person;\r\n","import React, { useState } from \"react\";\r\nimport Data from \"./../data.json\";\r\nimport Blocks from \"./Blocks\";\r\nimport Person from \"./Person\";\r\nimport \"./components.css\";\r\n\r\nfunction App() {\r\n  const [time, setTime] = useState(\"weekly\");\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Person\r\n        img=\"./images/image-jeremy.png\"\r\n        nameOfPerson=\"Jeremy Robson\"\r\n        setTime={setTime}\r\n        time={time}\r\n      />\r\n      <Blocks blocks={Data} time={time} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}